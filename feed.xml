<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://lyushisyan.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://lyushisyan.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-11-25T15:46:45+00:00</updated><id>https://lyushisyan.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra</title><link href="https://lyushisyan.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/" rel="alternate" type="text/html" title="Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra"/><published>2024-05-14T00:00:00+00:00</published><updated>2024-05-14T00:00:00+00:00</updated><id>https://lyushisyan.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/"><![CDATA[]]></content><author><name></name></author><summary type="html"><![CDATA[We’re sharing updates across our Gemini family of models and a glimpse of Project Astra, our vision for the future of AI assistants.]]></summary></entry><entry><title type="html">Phonon dispersion calculation for Graphene using QE</title><link href="https://lyushisyan.github.io/blog/2024/qe-graphene/" rel="alternate" type="text/html" title="Phonon dispersion calculation for Graphene using QE"/><published>2024-05-01T00:32:13+00:00</published><updated>2024-05-01T00:32:13+00:00</updated><id>https://lyushisyan.github.io/blog/2024/qe-graphene</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2024/qe-graphene/"><![CDATA[<p>In <strong>Quantum Espresso</strong>, phonon dispersion is computed using the <code class="language-plaintext highlighter-rouge">ph.x</code> program, which is based on <strong>Density Functional Perturbation Theory</strong>.</p> <h4 id="1-perform-scf-calculation-to-obtain-the-self-consistent-electronic-ground-state-energy-using-pwx">(1) Perform SCF calculation to obtain the self-consistent electronic ground state energy using <code class="language-plaintext highlighter-rouge">pw.x</code>.</h4> <ul> <li><strong>SCF input file (<code class="language-plaintext highlighter-rouge">scf.graphene.in</code>)</strong></li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&amp;control
  calculation <span class="o">=</span> <span class="s1">'scf'</span>
  restart_mode <span class="o">=</span> <span class="s1">'from_scratch'</span>
  pseudo_dir <span class="o">=</span> <span class="s1">'./pseudos/'</span>
  outdir <span class="o">=</span> <span class="s1">'./out/'</span>
  prefix <span class="o">=</span> <span class="s1">'graphene'</span>
/
&amp;system
  ibrav <span class="o">=</span> 4
  celldm<span class="o">(</span>1<span class="o">)</span> <span class="o">=</span> 4.654
  celldm<span class="o">(</span>3<span class="o">)</span> <span class="o">=</span> 6.0
  nat <span class="o">=</span> 2
  ntyp <span class="o">=</span> 1
  ecutwfc <span class="o">=</span> 60.0
  ecutrho <span class="o">=</span> 600.0
  assume_isolated <span class="o">=</span> <span class="s1">'2D'</span>
/
&amp;electrons
  conv_thr <span class="o">=</span> 1.0e-8
/
ATOMIC_SPECIES
  C 12.0107 C.pbe-n-kjpaw_psl.1.0.0.UPF
ATOMIC_POSITIONS alat
  C 0.00000 0.00000 0.00000
  C 0.00000 0.57735 0.00000
K_POINTS <span class="o">{</span>automatic<span class="o">}</span>
  8 8 1 0 0 0
</code></pre></div></div> <ul> <li><strong>Execute SCF calculation</strong></li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mpirun <span class="nt">-np</span> 4 pw.x <span class="nt">-i</span> scf.grap.in <span class="o">&gt;</span> scf.grap.out
</code></pre></div></div> <h4 id="2-compute-the-dynamical-matrix-on-a-uniform-grid-of-q-points-using-phx">(2) Compute the dynamical matrix on a uniform grid of q-points using <code class="language-plaintext highlighter-rouge">ph.x</code>.</h4> <ul> <li><strong>Input file (<code class="language-plaintext highlighter-rouge">ph.graphene.in</code>)</strong></li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&amp;INPUTPH
  tr2_ph <span class="o">=</span> 1.0d-15
  amass<span class="o">(</span>1<span class="o">)</span> <span class="o">=</span> 12.0107
  ldisp <span class="o">=</span> .true.
  nq1 <span class="o">=</span> 6
  nq2 <span class="o">=</span> 6
  nq3 <span class="o">=</span> 1
  outdir <span class="o">=</span> <span class="s1">'./out/'</span>
  prefix <span class="o">=</span> <span class="s1">'graphene'</span>
  fildyn <span class="o">=</span> <span class="s1">'graphene.dyn'</span>
/
</code></pre></div></div> <ul> <li><strong>Perform the computation</strong></li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mpirun <span class="nt">-np</span> 4 ph.x <span class="nt">-i</span> ph.graphene.in <span class="o">&gt;</span> ph.graphene.out
</code></pre></div></div> <ul> <li><strong>Output files</strong></li> </ul> <p><code class="language-plaintext highlighter-rouge">graphene.dyn0</code> contains coordinates of the q-point grid.</p> <p><code class="language-plaintext highlighter-rouge">graphene.dyn1-N</code> contains the force constants in $\boldsymbol q$-space.</p> <h4 id="3-perform-inverse-fourier-transform-of-the-dynamical-matrix-to-obtain-the-real-space-force-constants-using-q2rx">(3) Perform inverse Fourier transform of the dynamical matrix to obtain the real-space force constants using <code class="language-plaintext highlighter-rouge">q2r.x</code>.</h4> <ul> <li><strong>Input file (<code class="language-plaintext highlighter-rouge">q2r.graphene.in</code>)</strong></li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&amp;INPUT
  fildyn <span class="o">=</span> <span class="s1">'graphene.dyn'</span>
  zasr <span class="o">=</span> <span class="s1">'simple'</span>
  flfrc <span class="o">=</span> <span class="s1">'graphene661.fc'</span>
/
</code></pre></div></div> <ul> <li><strong>Execute the calculation</strong></li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mpirun <span class="nt">-np</span> 4 q2r.x <span class="nt">-i</span> q2r.graphene.in <span class="o">&gt;</span> q2r.graphene.out
</code></pre></div></div> <ul> <li><strong>Output file</strong></li> </ul> <p><code class="language-plaintext highlighter-rouge">Si661.fc</code> contains the interatomic force constants in real space for a 6<em>6</em>1 supercell.</p> <h4 id="4-perform-fourier-transform-of-the-real-space-components-using-matdynx-to-obtain-the-dynamical-matrix-at-any-q-point">(4) Perform Fourier transform of the real-space components using <code class="language-plaintext highlighter-rouge">matdyn.x</code> to obtain the dynamical matrix at any q-point.</h4> <ul> <li><strong>Input file (<code class="language-plaintext highlighter-rouge">matdyn.graphene.in</code>)</strong></li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&amp;INPUT
  asr <span class="o">=</span> <span class="s1">'simple'</span>
  flfrc <span class="o">=</span> <span class="s1">'graphene661.fc'</span>
  flfrq <span class="o">=</span> <span class="s1">'graphene.freq'</span>
  q_in_band_form <span class="o">=</span> .true.
  loto_2d <span class="o">=</span> .true.
/
4
0.00000000 0.00000000 0.0   80
0.00000000 0.57735027 0.0   40
0.33333333 0.577

35027 0.0   60
0.00000000 0.00000000 0.0   1
</code></pre></div></div> <ul> <li><strong>Execute the calculation</strong></li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mpirun <span class="nt">-np</span> 4 matdyn.x <span class="nt">-i</span> matdyn.graphene.in <span class="o">&gt;</span> matdyn.graphene.out
</code></pre></div></div> <p>Then, visualize the results using the generated <code class="language-plaintext highlighter-rouge">graphene.freq.gp</code> file.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/disp_grap-480.webp 480w,/assets/img/blog/disp_grap-800.webp 800w,/assets/img/blog/disp_grap-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/blog/disp_grap.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div>]]></content><author><name></name></author><category term="study"/><category term="DFT"/><category term="code"/><summary type="html"><![CDATA[This method is based on Density Functional Perturbation Theory.]]></summary></entry><entry><title type="html">Thermal conductivity calculation using QE+phono3py</title><link href="https://lyushisyan.github.io/blog/2024/phono3py/" rel="alternate" type="text/html" title="Thermal conductivity calculation using QE+phono3py"/><published>2024-04-29T23:36:10+00:00</published><updated>2024-04-29T23:36:10+00:00</updated><id>https://lyushisyan.github.io/blog/2024/phono3py</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2024/phono3py/"><![CDATA[<p><strong>Phono3py</strong> is a software for calculating phonon-phonon interactions and related properties using supercell method.</p> <h4 id="1-read-the-inputin-file-and-create-a-supercell">1. Read the <code class="language-plaintext highlighter-rouge">input.in</code> file and create a supercell</h4> <pre><code class="language-visual-basic">phono3py --qe -d --dim="4 4 1" -c graphene.in
</code></pre> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/phono3py_1-480.webp 480w,/assets/img/blog/phono3py_1-800.webp 800w,/assets/img/blog/phono3py_1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/blog/phono3py_1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>The <code class="language-plaintext highlighter-rouge">**supercell-xxx.in**</code> file obtained here only contains the lattice structure of the supercell, which needs to be combined with the <code class="language-plaintext highlighter-rouge">**header.in**</code> file in the next step to form a new input file.</p> <h4 id="2-use-qe-to-perform-self-consistent-field-scf-calculations">2. Use QE to perform self-consistent field (SCF) calculations</h4> <p>运行下列 <code class="language-plaintext highlighter-rouge">**pwrun.sh**</code> 文件，对不同位移下的所有超胞 <code class="language-plaintext highlighter-rouge">**graphene-xxx.in**</code> 文件进行 scf 计算</p> <pre><code class="language-visual-basic">#！/bin/bash

for i in {00001..00170};
do
	cat header.in supercell-$i.in &gt; input/graphene-$i.in;
	mpirun -np 4 pw.x input/graphene-$i.in &gt; output/graphene-$i.out
done
</code></pre> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/phono3py_2-480.webp 480w,/assets/img/blog/phono3py_2-800.webp 800w,/assets/img/blog/phono3py_2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/blog/phono3py_2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h4 id="3-use-phono3py-to-collect-forces-on-atoms-in-qe-calculation-results-force_fc3">3. Use <strong>phono3py</strong> to collect forces on atoms in <strong>QE</strong> calculation results ‘FORCE_FC3’</h4> <pre><code class="language-visual-basic">phono3py --qe --cf3 output/graphene-{00001..00170}.out
</code></pre> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/phono3py_3-480.webp 480w,/assets/img/blog/phono3py_3-800.webp 800w,/assets/img/blog/phono3py_3-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/blog/phono3py_3.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h4 id="4-calculate-third-order-and-second-order-force-constants">4. Calculate third-order and second-order force constants</h4> <pre><code class="language-visual-basic">phono3py --sym-fc
</code></pre> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/phono3py_4-480.webp 480w,/assets/img/blog/phono3py_4-800.webp 800w,/assets/img/blog/phono3py_4-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/blog/phono3py_4.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h4 id="5-calculate-lattice-thermal-conductivity">5. Calculate lattice thermal conductivity</h4> <pre><code class="language-visual-basic">phono3py --mesh="11 11 1" --fc3 --fc2 --br
</code></pre> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/phono3py_5-480.webp 480w,/assets/img/blog/phono3py_5-800.webp 800w,/assets/img/blog/phono3py_5-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/blog/phono3py_5.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">In</span> <span class="p">[</span><span class="mi">1</span><span class="p">]:</span> <span class="kn">import</span> <span class="n">h5py</span>
<span class="n">In</span> <span class="p">[</span><span class="mi">2</span><span class="p">]:</span> <span class="n">f</span> <span class="o">=</span> <span class="n">h5py</span><span class="p">.</span><span class="nc">File</span><span class="p">(</span><span class="sh">"</span><span class="s">kappa-m111111.hdf5</span><span class="sh">"</span><span class="p">)</span>
<span class="n">In</span> <span class="p">[</span><span class="mi">3</span><span class="p">]:</span> <span class="nf">list</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
<span class="n">Out</span><span class="p">[</span><span class="mi">3</span><span class="p">]:</span>
<span class="p">[</span><span class="sh">'</span><span class="s">frequency</span><span class="sh">'</span><span class="p">,</span>
<span class="sh">'</span><span class="s">gamma</span><span class="sh">'</span><span class="p">,</span>
<span class="sh">'</span><span class="s">group_velocity</span><span class="sh">'</span><span class="p">,</span>
<span class="sh">'</span><span class="s">gv_by_gv</span><span class="sh">'</span><span class="p">,</span>
<span class="sh">'</span><span class="s">heat_capacity</span><span class="sh">'</span><span class="p">,</span>
<span class="sh">'</span><span class="s">kappa</span><span class="sh">'</span><span class="p">,</span>
<span class="sh">'</span><span class="s">kappa_unit_conversion</span><span class="sh">'</span><span class="p">,</span>
<span class="sh">'</span><span class="s">mesh</span><span class="sh">'</span><span class="p">,</span>
<span class="sh">'</span><span class="s">mode_kappa</span><span class="sh">'</span><span class="p">,</span>
<span class="sh">'</span><span class="s">qpoint</span><span class="sh">'</span><span class="p">,</span>
<span class="sh">'</span><span class="s">temperature</span><span class="sh">'</span><span class="p">,</span>
<span class="sh">'</span><span class="s">weight</span><span class="sh">'</span><span class="p">]</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="study"/><category term="DFT"/><category term="code"/><summary type="html"><![CDATA[The calculation is based on the supercell method.]]></summary></entry><entry><title type="html">Displaying External Posts on Your al-folio Blog</title><link href="https://lyushisyan.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/" rel="alternate" type="text/html" title="Displaying External Posts on Your al-folio Blog"/><published>2022-04-23T23:20:09+00:00</published><updated>2022-04-23T23:20:09+00:00</updated><id>https://lyushisyan.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog</id><content type="html" xml:base="https://lyushisyan.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/"><![CDATA[]]></content><author><name></name></author></entry></feed>